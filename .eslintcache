[{"D:\\GitHub\\new-app-note\\src\\index.js":"1","D:\\GitHub\\new-app-note\\src\\App.js":"2","D:\\GitHub\\new-app-note\\src\\pages\\NotesList.js":"3","D:\\GitHub\\new-app-note\\src\\pages\\Login.js":"4","D:\\GitHub\\new-app-note\\src\\components\\Navigation.js":"5","D:\\GitHub\\new-app-note\\src\\components\\Notes.js":"6","D:\\GitHub\\new-app-note\\src\\pages\\NotesDetail.js":"7","D:\\GitHub\\new-app-note\\src\\components\\NoteAdd.js":"8","D:\\GitHub\\app-note\\src\\index.js":"9","D:\\GitHub\\app-note\\src\\App.js":"10","D:\\GitHub\\app-note\\src\\pages\\Login.js":"11","D:\\GitHub\\app-note\\src\\components\\Navigation.js":"12","D:\\GitHub\\app-note\\src\\pages\\NotesDetail.js":"13","D:\\GitHub\\app-note\\src\\pages\\NotesList.js":"14","D:\\GitHub\\app-note\\src\\components\\Notes.js":"15","D:\\GitHub\\app-note\\src\\components\\NoteAdd.js":"16","D:\\GitHub\\app-note\\src\\components\\NoteEdit.js":"17"},{"size":151,"mtime":1611152382493,"results":"18","hashOfConfig":"19"},{"size":982,"mtime":1611588290631,"results":"20","hashOfConfig":"19"},{"size":2095,"mtime":1611591274438,"results":"21","hashOfConfig":"19"},{"size":1589,"mtime":1611156878695,"results":"22","hashOfConfig":"19"},{"size":348,"mtime":1611154671300,"results":"23","hashOfConfig":"19"},{"size":219,"mtime":1611163167494,"results":"24","hashOfConfig":"19"},{"size":5029,"mtime":1611587880899,"results":"25","hashOfConfig":"19"},{"size":2209,"mtime":1611593455503,"results":"26","hashOfConfig":"19"},{"size":151,"mtime":1611152382493,"results":"27","hashOfConfig":"28"},{"size":1008,"mtime":1612098850312,"results":"29","hashOfConfig":"28"},{"size":1589,"mtime":1611156878695,"results":"30","hashOfConfig":"28"},{"size":260,"mtime":1611769132234,"results":"31","hashOfConfig":"28"},{"size":5040,"mtime":1611770053172,"results":"32","hashOfConfig":"28"},{"size":5518,"mtime":1612098249864,"results":"33","hashOfConfig":"28"},{"size":3444,"mtime":1611770060503,"results":"34","hashOfConfig":"28"},{"size":3690,"mtime":1611770073012,"results":"35","hashOfConfig":"28"},{"size":3882,"mtime":1611770040703,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"4t74gx",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"dvxik9",{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"59"},"D:\\GitHub\\new-app-note\\src\\index.js",[],["83","84"],"D:\\GitHub\\new-app-note\\src\\App.js",["85"],"D:\\GitHub\\new-app-note\\src\\pages\\NotesList.js",["86","87"],"D:\\GitHub\\new-app-note\\src\\pages\\Login.js",["88"],"import React, { useState } from 'react'\r\n\r\nfunction Login() {\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    function login() {\r\n        fetch(\"http://localhost:3001/auth/login\", {\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: state.username,\r\n                password: state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseData => {\r\n            if ( responseData.errors ) {\r\n                let errMsg = ''\r\n                responseData.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n            else if ( responseData.token ) {\r\n                alert('Success')\r\n                localStorage.setItem('loginToken', responseData.token);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" id=\"username\" value={state.username} onChange={handleChange} placeholder=\"Username\" />\r\n            <input type=\"password\" id=\"password\" value={state.password} onChange={handleChange} placeholder=\"Password\" />\r\n            <button onClick={login}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\GitHub\\new-app-note\\src\\components\\Navigation.js",[],"D:\\GitHub\\new-app-note\\src\\components\\Notes.js",[],"D:\\GitHub\\new-app-note\\src\\pages\\NotesDetail.js",["89","90","91","92","93","94","95","96","97"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NotesDetail({match}) {\r\n    \r\n    const input = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: 100px;\r\n        width: 300px;\r\n    `\r\n\r\n    const [state , setState] = useState({\r\n        title : \"\",\r\n        content : \"\"\r\n    })\r\n    \r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const getDataNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"GET\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                title : res.data.data.title,\r\n                content : res.data.data.content\r\n            }))\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if ( match.params.id ) {\r\n            getDataNote()\r\n        }\r\n    }, [])\r\n\r\n    const addNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: \"http://localhost:3001/notes\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            alert('Success Add')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    const editNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"PUT\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            alert('Success Edit')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"DELETE\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            alert('Success Delete')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input css={input} type=\"text\" id=\"title\" value={state.title} onChange={handleChange} placeholder=\"Input Title\" autoComplete=\"off\" />\r\n            <br/>\r\n            <textarea css={textarea} id=\"content\" value={state.content} onChange={handleChange} placeholder=\"Input Content\" />\r\n            <br/>\r\n\r\n            {\r\n            match.params.id\r\n            ? \r\n                <div>\r\n                    <button onClick={editNote}>Edit note</button>\r\n                    <button onClick={deleteNote}>Delete</button>\r\n                </div>\r\n            :\r\n                <button onClick={addNote}>Add note</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesDetail","D:\\GitHub\\new-app-note\\src\\components\\NoteAdd.js",["98"],"import React, { useState } from 'react'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NoteAdd() {\r\n    \r\n    const [display, setDisplay] = useState({\r\n        status: 'none',\r\n        height: 15\r\n    })\r\n\r\n    const container = css`\r\n        border-radius: 7px;\r\n        border: 1px solid #f2f2f2;\r\n        padding: 10px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        width: 50%;\r\n        margin: 0 auto;\r\n    `\r\n\r\n    const inputContainer = css`\r\n        display: ${display.status};\r\n        margin-bottom: 10px;\r\n    `\r\n\r\n    const input = css`\r\n        border-width: 0px;\r\n        border: none;\r\n        width: 100%;\r\n        font-size: 20px;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: ${display.height}px;\r\n        width: 100%;\r\n    `\r\n    \r\n    const buttonContainer = css`\r\n        display: ${display.status};\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n    \r\n    function showDisplay() {\r\n        setDisplay({\r\n            status : \"block\",\r\n            height: 100\r\n        })\r\n    }\r\n    \r\n    function hideDisplay() {\r\n        setDisplay({\r\n            status : \"none\",\r\n            height: 15\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div css={container}>\r\n            <div css={inputContainer}>\r\n                <input css={input} type=\"text\" id=\"title\" placeholder=\"Title\" autoComplete=\"off\" />\r\n            </div>\r\n            <textarea css={textarea} id=\"content\" placeholder=\"Make a note...\" onClick={showDisplay}/>\r\n            <div css={buttonContainer}>\r\n                <button css={button} onClick={hideDisplay}>Close</button>\r\n                <button css={button}>Add Note</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteAdd","D:\\GitHub\\app-note\\src\\index.js",[],["99","100"],"D:\\GitHub\\app-note\\src\\App.js",["101","102","103"],"import React from 'react'\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom'\n/** @jsx jsx */ /** @jsxRuntime classic */\nimport { jsx, css } from '@emotion/react'\n\nimport NotesPage from './pages/NotesList'\nimport NoteDetailPage from './pages/NotesDetail'\nimport LoginPage from './pages/Login'\nimport Nav from './components/Navigation'\n\nfunction App() {\n\n    const container = css`\n        font-family:'Roboto', sans-serif;\n        text-align: center;\n    `\n\n    return(\n        <HashRouter>\n            <div css={container}>\n                <Switch>\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/detail\" exact component={NoteDetailPage}/>\n                    <Route path=\"/detail/:id\" exact component={NoteDetailPage}/>\n                    <Route path=\"/login\" exact component={LoginPage}/>\n                </Switch>\n            </div>\n        </HashRouter>\n    )\n}\n\nconst Home = () => (\n    <NotesPage />\n)\n\nexport default App","D:\\GitHub\\app-note\\src\\pages\\Login.js",["104"],"D:\\GitHub\\app-note\\src\\components\\Navigation.js",["105","106"],"import React from 'react'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div>\r\n            <button>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation","D:\\GitHub\\app-note\\src\\pages\\NotesDetail.js",["107","108","109","110","111","112","113","114","115"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NotesDetail({match}) {\r\n    \r\n    const input = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: 100px;\r\n        width: 300px;\r\n    `\r\n\r\n    const [state , setState] = useState({\r\n        title : \"\",\r\n        content : \"\"\r\n    })\r\n    \r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const getDataNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                title : res.data.data.title,\r\n                content : res.data.data.content\r\n            }))\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if ( match.params.id ) {\r\n            getDataNote()\r\n        }\r\n    }, [])\r\n\r\n    const addNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: \"http://localhost:3001/notes\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            alert('Success Add')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    const editNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"PUT\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            alert('Success Edit')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"DELETE\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            alert('Success Delete')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input css={input} type=\"text\" id=\"title\" value={state.title} onChange={handleChange} placeholder=\"Input Title\" autoComplete=\"off\" />\r\n            <br/>\r\n            <textarea css={textarea} id=\"content\" value={state.content} onChange={handleChange} placeholder=\"Input Content\" />\r\n            <br/>\r\n\r\n            {\r\n            match.params.id\r\n            ? \r\n                <div>\r\n                    <button onClick={editNote}>Edit note</button>\r\n                    <button onClick={deleteNote}>Delete</button>\r\n                </div>\r\n            :\r\n                <button onClick={addNote}>Add note</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesDetail","D:\\GitHub\\app-note\\src\\pages\\NotesList.js",["116","117","118","119","120"],"import React, { useState, useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nimport NoteAdd from '../components/NoteAdd'\r\nimport NoteEdit from '../components/NoteEdit'\r\nimport Notes from '../components/Notes'\r\n\r\nfunction NotesList() {\r\n\r\n    const containerNotes = css`\r\n        width: 80%;\r\n        margin: 0 auto;\r\n        @media (max-width: 800px) {\r\n            width: 90%;\r\n            height: 300px;\r\n        }\r\n    `\r\n    \r\n    const loginContainer = css`\r\n        padding: 20px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        border-radius: 5px;\r\n        width: 30%;\r\n        margin: 150px auto;\r\n        border: 1px solid #f2f2f2;\r\n    `\r\n\r\n    const buttonLogin = css`\r\n        padding: 10px 15px 10px 15px;\r\n    `\r\n    \r\n    const buttonLogout = css`\r\n        margin-right: 15px;\r\n        margin-top: 10px;\r\n        float: right;\r\n    `\r\n\r\n    const input = css`\r\n        border-radius: 10px;\r\n        width: 80%;\r\n        margin-bottom: 10px;\r\n        height: 25px;\r\n        padding: 10px;\r\n        outline: none;\r\n    `\r\n\r\n    let notesList\r\n    const [notesData, setNotes] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    const [modalStatus, setShowModal] = useState(false)\r\n    const [currData, setCurrData] = useState()\r\n    const [refresh, setRefresh] = useState(new Date())\r\n    const [token, setToken] = useState(localStorage.getItem(\"loginToken\"))\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const sendGetRequest = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes?q=`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            setLoading(false)\r\n            setNotes(res.data)\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n    \r\n    const login = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/auth/login`,\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                data: {\r\n                    username: state.username,\r\n                    password: state.password\r\n                }\r\n            })\r\n            localStorage.setItem('loginToken', res.data.token)\r\n            setToken(res.data.token)\r\n            setRefresh(new Date())\r\n            setState({\r\n                username : \"\",\r\n                password : \"\"\r\n            })\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if ( loginToken ) {\r\n            setToken(loginToken)\r\n            sendGetRequest()\r\n        }\r\n    }, [refresh])\r\n\r\n    function showModal(data) {\r\n        setCurrData(data)\r\n        setShowModal(true)\r\n    }\r\n    \r\n    function hideModal() {\r\n        setShowModal(false)\r\n    }\r\n\r\n    function logout() {\r\n        localStorage.setItem('loginToken', '')\r\n        setToken('')\r\n    }\r\n\r\n    if (notesData) {\r\n        notesList = notesData.data.map(item => {\r\n            return (\r\n                <Notes key={item.id} data={item} handleEdit={() => showModal(item)} refresh={setRefresh}/>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return ( token\r\n        ?\r\n            loading\r\n            ?\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            :\r\n                <div css={css`margin-top: 25px;`}>\r\n                    <button css={buttonLogout} onClick={logout}>Logout</button>\r\n                    <NoteAdd refresh={setRefresh}/>\r\n                    <div css={containerNotes}>\r\n                        {notesList}\r\n                    </div>\r\n                    <NoteEdit show={modalStatus} handleClose={hideModal} data={currData} refresh={setRefresh}/>\r\n                </div>\r\n        :\r\n            <div css={loginContainer}>\r\n                <span css={css`font-size: 30px;font-weight: bold;`}>Sign in</span>\r\n                <br/> <br/> <br/>\r\n                <input css={input} type=\"text\" id=\"username\" value={state.username} onChange={handleChange} placeholder=\"Username\" autoComplete=\"off\"/>\r\n                <br/>\r\n                <input css={input} type=\"password\" id=\"password\" value={state.password} onChange={handleChange} placeholder=\"Password\" />\r\n                <br/>\r\n                <button css={buttonLogin} onClick={login}>Login</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NotesList","D:\\GitHub\\app-note\\src\\components\\Notes.js",["121","122","123"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css, keyframes } from '@emotion/react'\r\n\r\nfunction Notes(props) {\r\n\r\n    const [visiblility, setVisibility] = useState('hidden')\r\n    const [animateStatus, setAnimate] = useState(true)\r\n\r\n    const fadeIn = keyframes`\r\n        from {\r\n            opacity: 0;\r\n        }\r\n\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    `;\r\n\r\n    const fadeOut = keyframes`\r\n        from {\r\n            opacity: 1;\r\n        }\r\n\r\n        to {\r\n            opacity: 0;\r\n        }\r\n    `;\r\n\r\n    const container = css`\r\n        transition: transform 0.3s;\r\n        border-radius: 5px;\r\n        border: 2px solid #f2f2f2;\r\n        padding: 10px;\r\n        width: 22%;\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        margin: 0 auto;\r\n        margin-right: 10px;\r\n        margin-bottom: 10px;\r\n        text-align: left;\r\n        height: 210px;\r\n        &:hover {\r\n            box-shadow: 0px 1px 3px #888888;\r\n        }\r\n        @media (max-width: 800px) {\r\n            width: 45%;\r\n            height: 300px;\r\n        }\r\n        @media (max-width: 400px) {\r\n            width: 80%;\r\n            height: 300px;\r\n        }\r\n    `\r\n\r\n    const title = css`\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    `\r\n\r\n    const upper = css`\r\n        height: 85%;\r\n        overflow: hidden;\r\n    `\r\n\r\n    const lower = css`\r\n        visibility: ${visiblility};\r\n        animation: ${animateStatus ? fadeIn : fadeOut} 0.4s linear;\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n\r\n    function onMouseEnter() {\r\n        setVisibility('visible');\r\n        setAnimate(true);\r\n    };\r\n\r\n    function onMouseLeave() {\r\n        setVisibility('hidden');\r\n        setAnimate(false);\r\n    };\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const deleteNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"DELETE\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes/${props.data.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            props.refresh(new Date())\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div css={container} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} >\r\n            <div css={upper}>\r\n                <span css={title}>{props.data.title}</span>\r\n                <br/><br/>\r\n                <span>{props.data.content}</span>\r\n            </div>\r\n            <div css={lower}>\r\n                <button css={button} onClick={props.handleEdit}>Edit note</button>\r\n                <button css={button} onClick={deleteNote}>Delete note</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes","D:\\GitHub\\app-note\\src\\components\\NoteAdd.js",["124","125","126"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NoteAdd(props) {\r\n    \r\n    const [display, setDisplay] = useState({\r\n        status: 'none',\r\n        height: 15\r\n    })\r\n\r\n    const container = css`\r\n        border-radius: 7px;\r\n        border: 1px solid #f2f2f2;\r\n        padding: 10px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        width: 50%;\r\n        margin: 0 auto;\r\n        margin-bottom: 25px;\r\n    `\r\n\r\n    const inputContainer = css`\r\n        display: ${display.status};\r\n        margin-bottom: 10px;\r\n    `\r\n\r\n    const input = css`\r\n        border-width: 0px;\r\n        border: none;\r\n        width: 100%;\r\n        font-size: 20px;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: ${display.height}px;\r\n        width: 100%;\r\n    `\r\n    \r\n    const buttonContainer = css`\r\n        display: ${display.status};\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n    \r\n    function showDisplay() {\r\n        setDisplay({\r\n            status : \"block\",\r\n            height: 100\r\n        })\r\n    }\r\n    \r\n    function hideDisplay() {\r\n        setState({\r\n            title : \"\",\r\n            content : \"\"\r\n        })\r\n\r\n        setDisplay({\r\n            status : \"none\",\r\n            height: 15\r\n        })\r\n    }\r\n    \r\n    const [state , setState] = useState({\r\n        title : \"\",\r\n        content : \"\"\r\n    })\r\n    \r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const addNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            props.refresh(new Date())\r\n            hideDisplay()\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div css={container}>\r\n            <div css={inputContainer}>\r\n                <input css={input} type=\"text\" id=\"title\" value={state.title} onChange={handleChange} placeholder=\"Title\" autoComplete=\"off\" />\r\n            </div>\r\n            <textarea css={textarea} id=\"content\" value={state.content} onChange={handleChange} placeholder=\"Make a note...\" onClick={showDisplay}/>\r\n            <div css={buttonContainer}>\r\n                <button css={button} onClick={hideDisplay}>Close</button>\r\n                <button css={button} onClick={addNote}>Add Note</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteAdd","D:\\GitHub\\app-note\\src\\components\\NoteEdit.js",["127","128","129"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NoteEdit(props) {\r\n\r\n    const container = css`\r\n        display: ${props.show ? 'block' : 'none'};\r\n        position: fixed;\r\n        z-index: 1;\r\n        padding-top: 45px;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n        background-color: rgb(0, 0, 0);\r\n        background-color: rgba(0, 0, 0, 0.4);\r\n    `\r\n\r\n    const form = css`\r\n        background-color: white;\r\n        border-radius: 7px;\r\n        border: 1px solid #f2f2f2;\r\n        padding: 10px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        width: 40%;\r\n        margin: 0 auto;\r\n        margin-bottom: 25px;\r\n    `\r\n    \r\n    const inputContainer = css`\r\n        margin-bottom: 10px;\r\n    `\r\n\r\n    const input = css`\r\n        border-width: 0px;\r\n        border: none;\r\n        width: 100%;\r\n        font-size: 20px;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: 300px;\r\n        width: 100%;\r\n    `\r\n    \r\n    const buttonContainer = css`\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n\r\n    const [state , setState] = useState({\r\n        titleEdit : \"\",\r\n        contentEdit : \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.data) {\r\n            setState({\r\n                titleEdit: props.data.title,\r\n                contentEdit: props.data.content\r\n            })\r\n        }\r\n    }, [props])\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const editNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"PUT\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes/${props.data.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.titleEdit,\r\n                    content : state.contentEdit\r\n                }\r\n            })\r\n            props.refresh(new Date())\r\n            props.handleClose()\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div css={container}>\r\n            <div css={form}>\r\n                <div css={inputContainer}>\r\n                    <input css={input} type=\"text\" id=\"titleEdit\" value={state.titleEdit} onChange={handleChange} placeholder=\"Title\" autoComplete=\"off\" />\r\n                </div>\r\n                <textarea css={textarea} id=\"contentEdit\" value={state.contentEdit} onChange={handleChange} placeholder=\"Make a note...\" />\r\n                <div css={buttonContainer}>\r\n                    <button css={button} onClick={props.handleClose}>Close</button>\r\n                    <button css={button} onClick={editNote}>Edit note</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteEdit",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":30,"column":57,"nodeType":"140","messageId":"141","endLine":30,"endColumn":59},{"ruleId":"142","severity":1,"message":"143","line":42,"column":8,"nodeType":"144","endLine":42,"endColumn":10,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"139","line":32,"column":52,"nodeType":"140","messageId":"141","endLine":32,"endColumn":54},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":61,"column":57,"nodeType":"140","messageId":"141","endLine":61,"endColumn":59},{"ruleId":"142","severity":1,"message":"146","line":73,"column":8,"nodeType":"144","endLine":73,"endColumn":10,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"148","line":77,"column":19,"nodeType":"136","messageId":"137","endLine":77,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":93,"column":57,"nodeType":"140","messageId":"141","endLine":93,"endColumn":59},{"ruleId":"134","severity":1,"message":"148","line":103,"column":19,"nodeType":"136","messageId":"137","endLine":103,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":119,"column":57,"nodeType":"140","messageId":"141","endLine":119,"endColumn":59},{"ruleId":"134","severity":1,"message":"148","line":129,"column":19,"nodeType":"136","messageId":"137","endLine":129,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":141,"column":57,"nodeType":"140","messageId":"141","endLine":141,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"130","replacedBy":"149"},{"ruleId":"132","replacedBy":"150"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"151","line":2,"column":26,"nodeType":"136","messageId":"137","endLine":2,"endColumn":32},{"ruleId":"134","severity":1,"message":"152","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":11},{"ruleId":"138","severity":1,"message":"139","line":32,"column":52,"nodeType":"140","messageId":"141","endLine":32,"endColumn":54},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"153","line":3,"column":15,"nodeType":"136","messageId":"137","endLine":3,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":61,"column":57,"nodeType":"140","messageId":"141","endLine":61,"endColumn":59},{"ruleId":"142","severity":1,"message":"146","line":73,"column":8,"nodeType":"144","endLine":73,"endColumn":10,"suggestions":"154"},{"ruleId":"134","severity":1,"message":"148","line":77,"column":19,"nodeType":"136","messageId":"137","endLine":77,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":93,"column":57,"nodeType":"140","messageId":"141","endLine":93,"endColumn":59},{"ruleId":"134","severity":1,"message":"148","line":103,"column":19,"nodeType":"136","messageId":"137","endLine":103,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":119,"column":57,"nodeType":"140","messageId":"141","endLine":119,"endColumn":59},{"ruleId":"134","severity":1,"message":"148","line":129,"column":19,"nodeType":"136","messageId":"137","endLine":129,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":141,"column":57,"nodeType":"140","messageId":"141","endLine":141,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"155","line":2,"column":9,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":87,"column":57,"nodeType":"140","messageId":"141","endLine":87,"endColumn":59},{"ruleId":"138","severity":1,"message":"139","line":118,"column":57,"nodeType":"140","messageId":"141","endLine":118,"endColumn":59},{"ruleId":"142","severity":1,"message":"143","line":131,"column":8,"nodeType":"144","endLine":131,"endColumn":17,"suggestions":"156"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":100,"column":19,"nodeType":"136","messageId":"137","endLine":100,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":112,"column":57,"nodeType":"140","messageId":"141","endLine":112,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":103,"column":19,"nodeType":"136","messageId":"137","endLine":103,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":120,"column":57,"nodeType":"140","messageId":"141","endLine":120,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":101,"column":19,"nodeType":"136","messageId":"137","endLine":101,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":118,"column":57,"nodeType":"140","messageId":"141","endLine":118,"endColumn":59},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loginToken' and 'sendGetRequest'. Either include them or remove the dependency array.","ArrayExpression",["159"],"React Hook useEffect has missing dependencies: 'getDataNote' and 'match.params.id'. Either include them or remove the dependency array.",["160"],"'res' is assigned a value but never used.",["157"],["158"],"'Router' is defined but never used.","'Nav' is defined but never used.","'css' is defined but never used.",["161"],"'Link' is defined but never used.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [loginToken, sendGetRequest]",{"range":"170","text":"171"},"Update the dependencies array to be: [getDataNote, match.params.id]",{"range":"172","text":"173"},{"range":"174","text":"173"},"Update the dependencies array to be: [loginToken, refresh, sendGetRequest]",{"range":"175","text":"176"},[1245,1247],"[loginToken, sendGetRequest]",[1880,1882],"[getDataNote, match.params.id]",[1891,1893],[3749,3758],"[loginToken, refresh, sendGetRequest]"]