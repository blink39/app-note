{"version":3,"sources":["components/NoteAdd.js","components/NoteEdit.js","components/Notes.js","pages/NotesList.js","pages/NotesDetail.js","pages/Login.js","App.js","index.js"],"names":["NoteAdd","props","useState","status","height","display","setDisplay","container","css","inputContainer","input","textarea","buttonContainer","button","hideDisplay","setState","title","content","state","handleChange","e","target","id","value","prevState","loginToken","localStorage","getItem","addNote","a","axios","method","url","process","headers","data","refresh","Date","response","errors","errMsg","map","errorItem","message","alert","type","onChange","placeholder","autoComplete","onClick","NoteEdit","show","form","titleEdit","contentEdit","useEffect","editNote","handleClose","Notes","visiblility","setVisibility","animateStatus","setAnimate","fadeIn","keyframes","fadeOut","upper","lower","deleteNote","onMouseEnter","onMouseLeave","handleEdit","NotesList","notesList","containerNotes","loginContainer","buttonLogin","buttonLogout","notesData","setNotes","loading","setLoading","modalStatus","setShowModal","currData","setCurrData","setRefresh","token","setToken","username","password","sendGetRequest","res","login","setItem","item","key","NotesDetail","match","getDataNote","params","Login","fetch","body","JSON","stringify","then","json","responseData","Home","App","path","exact","component","NoteDetailPage","LoginPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24ac7d2f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NoteAdd(props) {\r\n    \r\n    const [display, setDisplay] = useState({\r\n        status: 'none',\r\n        height: 15\r\n    })\r\n\r\n    const container = css`\r\n        border-radius: 7px;\r\n        border: 1px solid #f2f2f2;\r\n        padding: 10px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        width: 50%;\r\n        margin: 0 auto;\r\n        margin-bottom: 25px;\r\n    `\r\n\r\n    const inputContainer = css`\r\n        display: ${display.status};\r\n        margin-bottom: 10px;\r\n    `\r\n\r\n    const input = css`\r\n        border-width: 0px;\r\n        border: none;\r\n        width: 100%;\r\n        font-size: 20px;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: ${display.height}px;\r\n        width: 100%;\r\n    `\r\n    \r\n    const buttonContainer = css`\r\n        display: ${display.status};\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n    \r\n    function showDisplay() {\r\n        setDisplay({\r\n            status : \"block\",\r\n            height: 100\r\n        })\r\n    }\r\n    \r\n    function hideDisplay() {\r\n        setState({\r\n            title : \"\",\r\n            content : \"\"\r\n        })\r\n\r\n        setDisplay({\r\n            status : \"none\",\r\n            height: 15\r\n        })\r\n    }\r\n    \r\n    const [state , setState] = useState({\r\n        title : \"\",\r\n        content : \"\"\r\n    })\r\n    \r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const addNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            props.refresh(new Date())\r\n            hideDisplay()\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div css={container}>\r\n            <div css={inputContainer}>\r\n                <input css={input} type=\"text\" id=\"title\" value={state.title} onChange={handleChange} placeholder=\"Title\" autoComplete=\"off\" />\r\n            </div>\r\n            <textarea css={textarea} id=\"content\" value={state.content} onChange={handleChange} placeholder=\"Make a note...\" onClick={showDisplay}/>\r\n            <div css={buttonContainer}>\r\n                <button css={button} onClick={hideDisplay}>Close</button>\r\n                <button css={button} onClick={addNote}>Add Note</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteAdd","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NoteEdit(props) {\r\n\r\n    const container = css`\r\n        display: ${props.show ? 'block' : 'none'};\r\n        position: fixed;\r\n        z-index: 1;\r\n        padding-top: 45px;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n        background-color: rgb(0, 0, 0);\r\n        background-color: rgba(0, 0, 0, 0.4);\r\n    `\r\n\r\n    const form = css`\r\n        background-color: white;\r\n        border-radius: 7px;\r\n        border: 1px solid #f2f2f2;\r\n        padding: 10px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        width: 40%;\r\n        margin: 0 auto;\r\n        margin-bottom: 25px;\r\n    `\r\n    \r\n    const inputContainer = css`\r\n        margin-bottom: 10px;\r\n    `\r\n\r\n    const input = css`\r\n        border-width: 0px;\r\n        border: none;\r\n        width: 100%;\r\n        font-size: 20px;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: 300px;\r\n        width: 100%;\r\n    `\r\n    \r\n    const buttonContainer = css`\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n\r\n    const [state , setState] = useState({\r\n        titleEdit : \"\",\r\n        contentEdit : \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.data) {\r\n            setState({\r\n                titleEdit: props.data.title,\r\n                contentEdit: props.data.content\r\n            })\r\n        }\r\n    }, [props])\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const editNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"PUT\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes/${props.data.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.titleEdit,\r\n                    content : state.contentEdit\r\n                }\r\n            })\r\n            props.refresh(new Date())\r\n            props.handleClose()\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div css={container}>\r\n            <div css={form}>\r\n                <div css={inputContainer}>\r\n                    <input css={input} type=\"text\" id=\"titleEdit\" value={state.titleEdit} onChange={handleChange} placeholder=\"Title\" autoComplete=\"off\" />\r\n                </div>\r\n                <textarea css={textarea} id=\"contentEdit\" value={state.contentEdit} onChange={handleChange} placeholder=\"Make a note...\" />\r\n                <div css={buttonContainer}>\r\n                    <button css={button} onClick={props.handleClose}>Close</button>\r\n                    <button css={button} onClick={editNote}>Edit note</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteEdit","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css, keyframes } from '@emotion/react'\r\n\r\nfunction Notes(props) {\r\n\r\n    const [visiblility, setVisibility] = useState('hidden')\r\n    const [animateStatus, setAnimate] = useState(true)\r\n\r\n    const fadeIn = keyframes`\r\n        from {\r\n            opacity: 0;\r\n        }\r\n\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    `;\r\n\r\n    const fadeOut = keyframes`\r\n        from {\r\n            opacity: 1;\r\n        }\r\n\r\n        to {\r\n            opacity: 0;\r\n        }\r\n    `;\r\n\r\n    const container = css`\r\n        transition: transform 0.3s;\r\n        border-radius: 5px;\r\n        border: 2px solid #f2f2f2;\r\n        padding: 10px;\r\n        width: 22%;\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        margin: 0 auto;\r\n        margin-right: 10px;\r\n        margin-bottom: 10px;\r\n        text-align: left;\r\n        height: 210px;\r\n        &:hover {\r\n            box-shadow: 0px 1px 3px #888888;\r\n        }\r\n        @media (max-width: 800px) {\r\n            width: 45%;\r\n            height: 300px;\r\n        }\r\n        @media (max-width: 400px) {\r\n            width: 80%;\r\n            height: 300px;\r\n        }\r\n    `\r\n\r\n    const title = css`\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    `\r\n\r\n    const upper = css`\r\n        height: 85%;\r\n        overflow: hidden;\r\n    `\r\n\r\n    const lower = css`\r\n        visibility: ${visiblility};\r\n        animation: ${animateStatus ? fadeIn : fadeOut} 0.4s linear;\r\n        text-align: right;\r\n        font-family:'Roboto', sans-serif;\r\n    `\r\n\r\n    const button = css`\r\n        background-color: white;\r\n        border: none;\r\n        padding: 10px;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: #f2f2f2;\r\n        }\r\n    `\r\n\r\n    function onMouseEnter() {\r\n        setVisibility('visible');\r\n        setAnimate(true);\r\n    };\r\n\r\n    function onMouseLeave() {\r\n        setVisibility('hidden');\r\n        setAnimate(false);\r\n    };\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const deleteNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"DELETE\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes/${props.data.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            props.refresh(new Date())\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div css={container} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} >\r\n            <div css={upper}>\r\n                <span css={title}>{props.data.title}</span>\r\n                <br/><br/>\r\n                <span>{props.data.content}</span>\r\n            </div>\r\n            <div css={lower}>\r\n                <button css={button} onClick={props.handleEdit}>Edit note</button>\r\n                <button css={button} onClick={deleteNote}>Delete note</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes","import React, { useState, useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nimport NoteAdd from '../components/NoteAdd'\r\nimport NoteEdit from '../components/NoteEdit'\r\nimport Notes from '../components/Notes'\r\n\r\nfunction NotesList() {\r\n\r\n    const containerNotes = css`\r\n        width: 80%;\r\n        margin: 0 auto;\r\n        @media (max-width: 800px) {\r\n            width: 90%;\r\n            height: 300px;\r\n        }\r\n    `\r\n    \r\n    const loginContainer = css`\r\n        padding: 20px;\r\n        box-shadow: 1px 5px 9px #888888;\r\n        border-radius: 5px;\r\n        width: 30%;\r\n        margin: 150px auto;\r\n        border: 1px solid #f2f2f2;\r\n    `\r\n\r\n    const buttonLogin = css`\r\n        padding: 10px 15px 10px 15px;\r\n    `\r\n    \r\n    const buttonLogout = css`\r\n        margin-right: 15px;\r\n        margin-top: 10px;\r\n        float: right;\r\n    `\r\n\r\n    const input = css`\r\n        border-radius: 10px;\r\n        width: 80%;\r\n        margin-bottom: 10px;\r\n        height: 25px;\r\n        padding: 10px;\r\n        outline: none;\r\n    `\r\n\r\n    let notesList\r\n    const [notesData, setNotes] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    const [modalStatus, setShowModal] = useState(false)\r\n    const [currData, setCurrData] = useState()\r\n    const [refresh, setRefresh] = useState(new Date())\r\n    const [token, setToken] = useState(localStorage.getItem(\"loginToken\"))\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const sendGetRequest = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes?q=`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            setLoading(false)\r\n            setNotes(res.data)\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n    \r\n    const login = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/auth/login`,\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                data: {\r\n                    username: state.username,\r\n                    password: state.password\r\n                }\r\n            })\r\n            localStorage.setItem('loginToken', res.data.token)\r\n            setToken(res.data.token)\r\n            setRefresh(new Date())\r\n            setState({\r\n                username : \"\",\r\n                password : \"\"\r\n            })\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if ( loginToken ) {\r\n            setToken(loginToken)\r\n            sendGetRequest()\r\n        }\r\n    }, [refresh])\r\n\r\n    function showModal(data) {\r\n        setCurrData(data)\r\n        setShowModal(true)\r\n    }\r\n    \r\n    function hideModal() {\r\n        setShowModal(false)\r\n    }\r\n\r\n    function logout() {\r\n        localStorage.setItem('loginToken', '')\r\n        setToken('')\r\n    }\r\n\r\n    if (notesData) {\r\n        notesList = notesData.data.map(item => {\r\n            return (\r\n                <Notes key={item.id} data={item} handleEdit={() => showModal(item)} refresh={setRefresh}/>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return ( token\r\n        ?\r\n            loading\r\n            ?\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            :\r\n                <div css={css`margin-top: 25px;`}>\r\n                    <button css={buttonLogout} onClick={logout}>Logout</button>\r\n                    <NoteAdd refresh={setRefresh}/>\r\n                    <div css={containerNotes}>\r\n                        {notesList}\r\n                    </div>\r\n                    <NoteEdit show={modalStatus} handleClose={hideModal} data={currData} refresh={setRefresh}/>\r\n                </div>\r\n        :\r\n            <div css={loginContainer}>\r\n                <span css={css`font-size: 30px;font-weight: bold;`}>Sign in</span>\r\n                <br/> <br/> <br/>\r\n                <input css={input} type=\"text\" id=\"username\" value={state.username} onChange={handleChange} placeholder=\"Username\" autoComplete=\"off\"/>\r\n                <br/>\r\n                <input css={input} type=\"password\" id=\"password\" value={state.password} onChange={handleChange} placeholder=\"Password\" />\r\n                <br/>\r\n                <button css={buttonLogin} onClick={login}>Login</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NotesList","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction NotesDetail({match}) {\r\n    \r\n    const input = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    `\r\n\r\n    const textarea = css`\r\n        border-width:0px;\r\n        border:none;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n        resize: none;\r\n        height: 100px;\r\n        width: 300px;\r\n    `\r\n\r\n    const [state , setState] = useState({\r\n        title : \"\",\r\n        content : \"\"\r\n    })\r\n    \r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const loginToken = localStorage.getItem(\"loginToken\")\r\n\r\n    const getDataNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_URL_DEV}/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                title : res.data.data.title,\r\n                content : res.data.data.content\r\n            }))\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if ( match.params.id ) {\r\n            getDataNote()\r\n        }\r\n    }, [])\r\n\r\n    const addNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: \"http://localhost:3001/notes\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            alert('Success Add')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    const editNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"PUT\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    title : state.title,\r\n                    content : state.content\r\n                }\r\n            })\r\n            alert('Success Edit')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteNote = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"DELETE\",\r\n                url: `http://localhost:3001/notes/${match.params.id}`,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + loginToken,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            alert('Success Delete')\r\n        } catch (err) {\r\n            if ( err.response.data.errors ) {\r\n                let errMsg = ''\r\n                err.response.data.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input css={input} type=\"text\" id=\"title\" value={state.title} onChange={handleChange} placeholder=\"Input Title\" autoComplete=\"off\" />\r\n            <br/>\r\n            <textarea css={textarea} id=\"content\" value={state.content} onChange={handleChange} placeholder=\"Input Content\" />\r\n            <br/>\r\n\r\n            {\r\n            match.params.id\r\n            ? \r\n                <div>\r\n                    <button onClick={editNote}>Edit note</button>\r\n                    <button onClick={deleteNote}>Delete</button>\r\n                </div>\r\n            :\r\n                <button onClick={addNote}>Add note</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesDetail","import React, { useState } from 'react'\r\n\r\nfunction Login() {\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    function login() {\r\n        fetch(\"http://localhost:3001/auth/login\", {\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: state.username,\r\n                password: state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseData => {\r\n            if ( responseData.errors ) {\r\n                let errMsg = ''\r\n                responseData.errors.map( errorItem => {\r\n                    errMsg += errorItem.message + '\\n'\r\n                })\r\n                alert(errMsg)\r\n            }\r\n            else if ( responseData.token ) {\r\n                alert('Success')\r\n                localStorage.setItem('loginToken', responseData.token);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" id=\"username\" value={state.username} onChange={handleChange} placeholder=\"Username\" />\r\n            <input type=\"password\" id=\"password\" value={state.password} onChange={handleChange} placeholder=\"Password\" />\r\n            <button onClick={login}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom'\n/** @jsx jsx */ /** @jsxRuntime classic */\nimport { jsx, css } from '@emotion/react'\n\nimport NotesPage from './pages/NotesList'\nimport NoteDetailPage from './pages/NotesDetail'\nimport LoginPage from './pages/Login'\nimport Nav from './components/Navigation'\n\nfunction App() {\n\n    const container = css`\n        font-family:'Roboto', sans-serif;\n        text-align: center;\n    `\n\n    return(\n        <HashRouter>\n            <div css={container}>\n                <Switch>\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/detail\" exact component={NoteDetailPage}/>\n                    <Route path=\"/detail/:id\" exact component={NoteDetailPage}/>\n                    <Route path=\"/login\" exact component={LoginPage}/>\n                </Switch>\n            </div>\n        </HashRouter>\n    )\n}\n\nconst Home = () => (\n    <NotesPage />\n)\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}